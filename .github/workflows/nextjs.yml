name: Deploy Next.js site to Pages with Node

on:
  # mainブランチにpushされたら実行
  push:
    branches: ["main"]

  # Actionsタブから手動実行
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# 同時実行を制限
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. リポジトリをチェックアウト
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Rust ツールチェーンを設定 (cargo 1.81.0)
      #    dtolnay/rust-toolchain@v1 が便利ですが、ここでは cargo のバージョン固定を例示
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.81.0
          # 必要に応じて components: rustfmt, clippy など指定
          override: true

      # 3. Node を設定 (v23.5.0)
      #    もし 23.5.0 が取得できない場合は '23.x' や '23' にするなど調整が必要
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '23.5.0'

      # 4. キャッシュ (npm & ビルドキャッシュ)
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      # 5. wasm-pack を 0.13.1 でインストール
      - name: Install wasm-pack
        run: |
          cargo install wasm-pack --version 0.13.1

      # 6. WebAssembly バックエンドをビルド
      - name: Build WebAssembly backend
        run: |
          cd wasm_backend
          wasm-pack build --release --target bundler

      # 7. npm で依存関係をインストール
      - name: Install dependencies
        run: npm install

      # 8. Next.js のビルド (静的エクスポートなど)
      - name: Build with Next.js
        env:
          NODE_OPTIONS: "--experimental-wasm-modules"  # WASM実験オプション
        run: |
          npm run build

      # 9. ビルド成果物 (./out) をアップロード
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
